# 평범한 배낭

# 여행에 필요한 N개의 물건엔 무게W, 가치V를 지님
# K만큼 무게로 제한된 배낭에 넣을 수 있는 최대가치를 구하여라

# knapsack 냅색 알고리즘임!

import sys
input = sys.stdin.readline

N, K = map(int, input().split())
dp = [0] * (K+1)

# dp에는 각 무게가 가지는 가치를 저장하는 것
for _ in range(N):
    W,V = map(int, input().split())
    for i in range(K, W-1, -1):
        dp[i] = max(dp[i], dp[i-W] + V)

print(dp[-1])

# 예제 보자면 이런 형식
#  K      1   2   3   4   5   6   7 (최대까지)
# (6,13)  0   0   0   0   0   13  13  (6부터 그것보다 큰거 갱신 왜냐면 다 0인상태였음)
# (4,8)   0   0   0   8   8   13  13  (7부터 주루루륵 하는데 7은 13과 dp[7-4]=0+8 비교 dp[3]+8=8이랑 3비교  )
# (3,6)   0   0   6   8   8   13  14  (7은 dp[7-3]+6=14랑 13 비교, 6은 dp[3]+6=6과 13비교)
# (5,12)  0   0   6   8   12  13  14  (7은 dp[2]+12 랑 14 비교)